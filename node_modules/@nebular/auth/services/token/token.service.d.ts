import { Observable, BehaviorSubject } from 'rxjs';
import { NbTokenStorage } from './token-storage';
import { NbAuthToken } from './token';
/**
 * Service that allows you to manage authentication token - get, set, clear and also listen to token changes over time.
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbTokenService {
    protected tokenStorage: NbTokenStorage;
    protected token$: BehaviorSubject<NbAuthToken>;
    constructor(tokenStorage: NbTokenStorage);
    /**
     * Publishes token when it changes.
     * @returns {Observable<NbAuthToken>}
     */
    tokenChange(): Observable<NbAuthToken>;
    /**
     * Sets a token into the storage. This method is used by the NbAuthService automatically.
     *
     * @param {NbAuthToken} token
     * @returns {Observable<any>}
     */
    set(token: NbAuthToken): Observable<null>;
    /**
     * Returns observable of current token
     * @returns {Observable<NbAuthToken>}
     */
    get(): Observable<NbAuthToken>;
    /**
     * Removes the token and published token value
     *
     * @returns {Observable<any>}
     */
    clear(): Observable<null>;
    protected publishStoredToken(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbTokenService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbTokenService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4uc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJ0b2tlbi5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUsIEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTmJUb2tlblN0b3JhZ2UgfSBmcm9tICcuL3Rva2VuLXN0b3JhZ2UnO1xuaW1wb3J0IHsgTmJBdXRoVG9rZW4gfSBmcm9tICcuL3Rva2VuJztcbi8qKlxuICogU2VydmljZSB0aGF0IGFsbG93cyB5b3UgdG8gbWFuYWdlIGF1dGhlbnRpY2F0aW9uIHRva2VuIC0gZ2V0LCBzZXQsIGNsZWFyIGFuZCBhbHNvIGxpc3RlbiB0byB0b2tlbiBjaGFuZ2VzIG92ZXIgdGltZS5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJUb2tlblNlcnZpY2Uge1xuICAgIHByb3RlY3RlZCB0b2tlblN0b3JhZ2U6IE5iVG9rZW5TdG9yYWdlO1xuICAgIHByb3RlY3RlZCB0b2tlbiQ6IEJlaGF2aW9yU3ViamVjdDxOYkF1dGhUb2tlbj47XG4gICAgY29uc3RydWN0b3IodG9rZW5TdG9yYWdlOiBOYlRva2VuU3RvcmFnZSk7XG4gICAgLyoqXG4gICAgICogUHVibGlzaGVzIHRva2VuIHdoZW4gaXQgY2hhbmdlcy5cbiAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxOYkF1dGhUb2tlbj59XG4gICAgICovXG4gICAgdG9rZW5DaGFuZ2UoKTogT2JzZXJ2YWJsZTxOYkF1dGhUb2tlbj47XG4gICAgLyoqXG4gICAgICogU2V0cyBhIHRva2VuIGludG8gdGhlIHN0b3JhZ2UuIFRoaXMgbWV0aG9kIGlzIHVzZWQgYnkgdGhlIE5iQXV0aFNlcnZpY2UgYXV0b21hdGljYWxseS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7TmJBdXRoVG9rZW59IHRva2VuXG4gICAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn1cbiAgICAgKi9cbiAgICBzZXQodG9rZW46IE5iQXV0aFRva2VuKTogT2JzZXJ2YWJsZTxudWxsPjtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIG9ic2VydmFibGUgb2YgY3VycmVudCB0b2tlblxuICAgICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPE5iQXV0aFRva2VuPn1cbiAgICAgKi9cbiAgICBnZXQoKTogT2JzZXJ2YWJsZTxOYkF1dGhUb2tlbj47XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyB0aGUgdG9rZW4gYW5kIHB1Ymxpc2hlZCB0b2tlbiB2YWx1ZVxuICAgICAqXG4gICAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn1cbiAgICAgKi9cbiAgICBjbGVhcigpOiBPYnNlcnZhYmxlPG51bGw+O1xuICAgIHByb3RlY3RlZCBwdWJsaXNoU3RvcmVkVG9rZW4oKTogdm9pZDtcbn1cbiJdfQ==