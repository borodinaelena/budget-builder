import { NbAuthToken } from './token';
import { NbAuthTokenParceler } from './token-parceler';
import * as ɵngcc0 from '@angular/core';
export declare abstract class NbTokenStorage {
    abstract get(): NbAuthToken;
    abstract set(token: NbAuthToken): any;
    abstract clear(): any;
}
/**
 * Service that uses browser localStorage as a storage.
 *
 * The token storage is provided into auth module the following way:
 * ```ts
 * { provide: NbTokenStorage, useClass: NbTokenLocalStorage },
 * ```
 *
 * If you need to change the storage behaviour or provide your own - just extend your class from basic `NbTokenStorage`
 * or `NbTokenLocalStorage` and provide in your `app.module`:
 * ```ts
 * { provide: NbTokenStorage, useClass: NbTokenCustomStorage },
 * ```
 *
 */
export declare class NbTokenLocalStorage extends NbTokenStorage {
    private parceler;
    protected key: string;
    constructor(parceler: NbAuthTokenParceler);
    /**
     * Returns token from localStorage
     * @returns {NbAuthToken}
     */
    get(): NbAuthToken;
    /**
     * Sets token to localStorage
     * @param {NbAuthToken} token
     */
    set(token: NbAuthToken): void;
    /**
     * Clears token from localStorage
     */
    clear(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbTokenLocalStorage, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbTokenLocalStorage>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tc3RvcmFnZS5kLnRzIiwic291cmNlcyI6WyJ0b2tlbi1zdG9yYWdlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5iQXV0aFRva2VuIH0gZnJvbSAnLi90b2tlbic7XG5pbXBvcnQgeyBOYkF1dGhUb2tlblBhcmNlbGVyIH0gZnJvbSAnLi90b2tlbi1wYXJjZWxlcic7XG5leHBvcnQgZGVjbGFyZSBhYnN0cmFjdCBjbGFzcyBOYlRva2VuU3RvcmFnZSB7XG4gICAgYWJzdHJhY3QgZ2V0KCk6IE5iQXV0aFRva2VuO1xuICAgIGFic3RyYWN0IHNldCh0b2tlbjogTmJBdXRoVG9rZW4pOiBhbnk7XG4gICAgYWJzdHJhY3QgY2xlYXIoKTogYW55O1xufVxuLyoqXG4gKiBTZXJ2aWNlIHRoYXQgdXNlcyBicm93c2VyIGxvY2FsU3RvcmFnZSBhcyBhIHN0b3JhZ2UuXG4gKlxuICogVGhlIHRva2VuIHN0b3JhZ2UgaXMgcHJvdmlkZWQgaW50byBhdXRoIG1vZHVsZSB0aGUgZm9sbG93aW5nIHdheTpcbiAqIGBgYHRzXG4gKiB7IHByb3ZpZGU6IE5iVG9rZW5TdG9yYWdlLCB1c2VDbGFzczogTmJUb2tlbkxvY2FsU3RvcmFnZSB9LFxuICogYGBgXG4gKlxuICogSWYgeW91IG5lZWQgdG8gY2hhbmdlIHRoZSBzdG9yYWdlIGJlaGF2aW91ciBvciBwcm92aWRlIHlvdXIgb3duIC0ganVzdCBleHRlbmQgeW91ciBjbGFzcyBmcm9tIGJhc2ljIGBOYlRva2VuU3RvcmFnZWBcbiAqIG9yIGBOYlRva2VuTG9jYWxTdG9yYWdlYCBhbmQgcHJvdmlkZSBpbiB5b3VyIGBhcHAubW9kdWxlYDpcbiAqIGBgYHRzXG4gKiB7IHByb3ZpZGU6IE5iVG9rZW5TdG9yYWdlLCB1c2VDbGFzczogTmJUb2tlbkN1c3RvbVN0b3JhZ2UgfSxcbiAqIGBgYFxuICpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJUb2tlbkxvY2FsU3RvcmFnZSBleHRlbmRzIE5iVG9rZW5TdG9yYWdlIHtcbiAgICBwcml2YXRlIHBhcmNlbGVyO1xuICAgIHByb3RlY3RlZCBrZXk6IHN0cmluZztcbiAgICBjb25zdHJ1Y3RvcihwYXJjZWxlcjogTmJBdXRoVG9rZW5QYXJjZWxlcik7XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0b2tlbiBmcm9tIGxvY2FsU3RvcmFnZVxuICAgICAqIEByZXR1cm5zIHtOYkF1dGhUb2tlbn1cbiAgICAgKi9cbiAgICBnZXQoKTogTmJBdXRoVG9rZW47XG4gICAgLyoqXG4gICAgICogU2V0cyB0b2tlbiB0byBsb2NhbFN0b3JhZ2VcbiAgICAgKiBAcGFyYW0ge05iQXV0aFRva2VufSB0b2tlblxuICAgICAqL1xuICAgIHNldCh0b2tlbjogTmJBdXRoVG9rZW4pOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIENsZWFycyB0b2tlbiBmcm9tIGxvY2FsU3RvcmFnZVxuICAgICAqL1xuICAgIGNsZWFyKCk6IHZvaWQ7XG59XG4iXX0=