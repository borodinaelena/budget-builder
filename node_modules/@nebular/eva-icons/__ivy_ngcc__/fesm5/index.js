import { __assign, __decorate, __extends, __metadata } from 'tslib';
import { NgModule } from '@angular/core';
import { NbIconLibraries, NbSvgIcon } from '@nebular/theme';
import { icons } from 'eva-icons';

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@nebular/theme';
var NbEvaSvgIcon = /** @class */ (function (_super) {
    __extends(NbEvaSvgIcon, _super);
    function NbEvaSvgIcon(name, content) {
        var _this = _super.call(this, name, '') || this;
        _this.name = name;
        _this.content = content;
        return _this;
    }
    NbEvaSvgIcon.prototype.getContent = function (options) {
        return this.content.toSvg(__assign({ width: '100%', height: '100%', fill: 'currentColor' }, options));
    };
    return NbEvaSvgIcon;
}(NbSvgIcon));
var NbEvaIconsModule = /** @class */ (function () {
    function NbEvaIconsModule(iconLibrary) {
        this.NAME = 'eva';
        iconLibrary.registerSvgPack(this.NAME, this.createIcons());
        iconLibrary.setDefaultPack(this.NAME);
    }
    NbEvaIconsModule.prototype.createIcons = function () {
        return Object
            .entries(icons)
            .map(function (_a) {
            var name = _a[0], icon = _a[1];
            return [name, new NbEvaSvgIcon(name, icon)];
        })
            .reduce(function (newIcons, _a) {
            var name = _a[0], icon = _a[1];
            newIcons[name] = icon;
            return newIcons;
        }, {});
    };
    NbEvaIconsModule = __decorate([ __metadata("design:paramtypes", [NbIconLibraries])
    ], NbEvaIconsModule);
NbEvaIconsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NbEvaIconsModule });
NbEvaIconsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NbEvaIconsModule_Factory(t) { return new (t || NbEvaIconsModule)(ɵngcc0.ɵɵinject(ɵngcc1.NbIconLibraries)); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NbEvaIconsModule, [{
        type: NgModule,
        args: [{}]
    }], function () { return [{ type: ɵngcc1.NbIconLibraries }]; }, null); })();
    return NbEvaIconsModule;
}());

/*
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NbEvaSvgIcon, NbEvaIconsModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBRU87QUFDUDs7Ozs7O2dGQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19hc3NpZ24sIF9fZGVjb3JhdGUsIF9fZXh0ZW5kcywgX19tZXRhZGF0YSB9IGZyb20gJ3RzbGliJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYkljb25MaWJyYXJpZXMsIE5iU3ZnSWNvbiB9IGZyb20gJ0BuZWJ1bGFyL3RoZW1lJztcbmltcG9ydCB7IGljb25zIH0gZnJvbSAnZXZhLWljb25zJztcblxuLypcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG52YXIgTmJFdmFTdmdJY29uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhOYkV2YVN2Z0ljb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTmJFdmFTdmdJY29uKG5hbWUsIGNvbnRlbnQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbmFtZSwgJycpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICBfdGhpcy5jb250ZW50ID0gY29udGVudDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBOYkV2YVN2Z0ljb24ucHJvdG90eXBlLmdldENvbnRlbnQgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5jb250ZW50LnRvU3ZnKF9fYXNzaWduKHsgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwJScsIGZpbGw6ICdjdXJyZW50Q29sb3InIH0sIG9wdGlvbnMpKTtcbiAgICB9O1xuICAgIHJldHVybiBOYkV2YVN2Z0ljb247XG59KE5iU3ZnSWNvbikpO1xudmFyIE5iRXZhSWNvbnNNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTmJFdmFJY29uc01vZHVsZShpY29uTGlicmFyeSkge1xuICAgICAgICB0aGlzLk5BTUUgPSAnZXZhJztcbiAgICAgICAgaWNvbkxpYnJhcnkucmVnaXN0ZXJTdmdQYWNrKHRoaXMuTkFNRSwgdGhpcy5jcmVhdGVJY29ucygpKTtcbiAgICAgICAgaWNvbkxpYnJhcnkuc2V0RGVmYXVsdFBhY2sodGhpcy5OQU1FKTtcbiAgICB9XG4gICAgTmJFdmFJY29uc01vZHVsZS5wcm90b3R5cGUuY3JlYXRlSWNvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBPYmplY3RcbiAgICAgICAgICAgIC5lbnRyaWVzKGljb25zKVxuICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgIHZhciBuYW1lID0gX2FbMF0sIGljb24gPSBfYVsxXTtcbiAgICAgICAgICAgIHJldHVybiBbbmFtZSwgbmV3IE5iRXZhU3ZnSWNvbihuYW1lLCBpY29uKV07XG4gICAgICAgIH0pXG4gICAgICAgICAgICAucmVkdWNlKGZ1bmN0aW9uIChuZXdJY29ucywgX2EpIHtcbiAgICAgICAgICAgIHZhciBuYW1lID0gX2FbMF0sIGljb24gPSBfYVsxXTtcbiAgICAgICAgICAgIG5ld0ljb25zW25hbWVdID0gaWNvbjtcbiAgICAgICAgICAgIHJldHVybiBuZXdJY29ucztcbiAgICAgICAgfSwge30pO1xuICAgIH07XG4gICAgTmJFdmFJY29uc01vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBOZ01vZHVsZSh7fSksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbTmJJY29uTGlicmFyaWVzXSlcbiAgICBdLCBOYkV2YUljb25zTW9kdWxlKTtcbiAgICByZXR1cm4gTmJFdmFJY29uc01vZHVsZTtcbn0oKSk7XG5cbi8qXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuXG4vKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCB7IE5iRXZhU3ZnSWNvbiwgTmJFdmFJY29uc01vZHVsZSB9O1xuIl19